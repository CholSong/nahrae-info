<% provide(:title,"Video Chat") %>
<h1>Video Chat</h1>
<%
if !signed_in?
	echo "<h2>You are not signed in.</h2>"
else
%>
<script src="https://staging.tokbox.com/v0.91/js/TB.min.js" type="text/javascript" charset="utf-8"></script>
	<style>
		@charset "UTF-8";
/* CSS Document 
 *
 * Copyright 2010, TokBox, Inc..
 *
 */
  
body, html {
	font-family:'Lucida Grande', 'Trebuchet MS', sans-serif;
	color: #4c4c4c;
	text-align:left;
	
	background-color: #f0f9fb;
}
h1 {
	margin-bottom:10px
}
object {
	float: left;
}
a,a:visited {
	color: #0099CC;
	text-decoration: none;
}
a:hover {
	text-decoration: underline;
}

#opentok_console {
	float: right;
	width: 400px;
	font-family: 'courier', monospace;
	font-size: 12px;
}

#links {
	float: left;
}

#links a, input {
	display: none;
}

#sessionControls {
	float: top;
}

#pubControls input {
	display: inline;
}

#publishForm {
	font-size: 14px;
	font-family: Arial, Helvetica, sans-serif;
}

#deviceManagerControls {
	font-size: 14px;
	font-family: Arial, Helvetica, sans-serif;
}
	
#action a {
	display:none;
}

#localview {
	float: left;	
	width: 250px;
}

div.controls {
	width:220px;
	padding:10 0 10 0;
	font-size: 14px;
}

.videobar {
	float: top;
}

.videobar-left {
	float: left;	
	width: 250px;
}

.smalltype {
	font-size: 80%;
	padding-bottom: 6px;
}

.description {
	font-size: 90%;
	padding-top: 6px;
}

#controls {
	float: left;
	text-align: left;
	padding-right: 10px;
}

#publisherControls {
	display: none;
}

#push-to-talk {
	display: none;
}

#manageDevicesBtn {
	display:none;
}

#manageDevicesDiv {
	display:none;
	position:absolute;
	width:200px;
	left:280px;
	background-color:DDD;
	padding:10px;
	border:4px;
}

#manageDevicesDiv h1{
     font-size:18px;
 }
 #manageDevicesDiv label{
    width:100%;
    display: block;
    margin-top:-4px;
 }
 #manageDevicesDiv img{
     display: block;
     margin:auto;
 }
 #manageDevicesDiv a{
     font-size: small;
     display: block;
     margin-top:-12px;
 }
 #manageDevicesDiv input{
     margin-top:2px;
 }
 #gainControl{
     width:30px;
     margin-top:20px;
 }
 #manageDevicesDiv .volume{
     display:inline-block;
     position: relative;
     vertical-align:top;
     height:20px;
     width:0;
     height:10px;
     background-color:lime;
     margin-top:10px;
 }

#devicePanelContainer {
	position: absolute;
	left: 250px;
	top: 10px;
	display:none;
}

#devicePanelCloseButton {
	position: relative;
	z-index: 10;
	margin-left: 285px;
	margin-right: 12px;
	padding: 3px;
	text-align: center;
	font-size: 11px;
	background-color: lightgrey;
}

#devicePanelBackground {
	background-color: lightgrey;
	width: 340px;
	height: 230px;
}

#devicePanelInset #devicePanel {
	position: relative;
	top: -74px;
	left: -9px;
}

a.settingsClose:link,
a.settingsClose:visited,
a.settingsClose:hover {
	text-decoration: none;
	cursor: pointer;
}

table {
	clear: both;
}

td {
	vertical-align: top;
	padding-right: 15px;
}

.publisherContainer {
	float: left;
}

.subscriberContainer {
	width: 264px;
	margin-left: 4px;
	float:left;
}

#login {
	background-color:#999;
	border:thin solid #000;
	width:400px;
	padding:5px;
}

#login input {
	display: inline;
	border: thin solid #000;
}

#connectionsContainer {
	clear:both;
	background-color:#CCC;
	width:400px;
}

.swfContainer {
	float:left;
	width: 320;
	margin-left: 5px;
}

#recorderElement {
	clear:both;
	float:left;
}

#playerElement {
	clear:both;
	float:left;
}





		#subscribers{
			width: 640px;
			height: 480px;
			margin: 0px auto;
			position: relative;
			z-index: 100;
		}
		#myCamera{
			position: absolute;
			right: 10px;
			bottom: 10px;
			border: 2px solid #ffffff;
			z-index: 101;
		}
	</style>
	<script type="text/javascript" charset="utf-8">
		// API Key for nahrae & jinnahrae@gmail.com from OpenTok
		var apiKey = 16734371; // 1127 : OpenTok sample API key. Replace with your own API key.

		// for localhost
		//var sessionId = '1_MX4xNjczNDM3MX5-MjAxMi0wNy0yMSAxMTo0MjoxMi4wMzE3NjErMDA6MDB-MC4zMDk4NTA5NDg3MzF-';
		//var token = 'T1==cGFydG5lcl9pZD0xNjczNDM3MSZzaWc9MDZkMDEwZDkxNDlmN2Q0YWZiNGVhMWNmZmNjNmU2MjcwNDEyNTIyNjpyb2xlPXB1Ymxpc2hlciZzZXNzaW9uX2lkPTFfTVg0eE5qY3pORE0zTVg1LU1qQXhNaTB3TnkweU1TQXhNVG8wTWpveE1pNHdNekUzTmpFck1EQTZNREItTUM0ek1EazROVEE1TkRnM016Ri0mY3JlYXRlX3RpbWU9MTM0Mjg3MTM1MSZub25jZT0wLjY1OTY3NDg2NzYyOTI2MzEmZXhwaXJlX3RpbWU9MTM0MzM2NTIwMA==';


		// for nahrae.herokuapp.com
		var sessionId = '2_MX4xNjczNDM3MX5-MjAxMi0wNy0yMSAxMTo1MDoyMi42OTMwMDArMDA6MDB-MC45MDQwODYxODk1NzZ-';
		var token = 'T1==cGFydG5lcl9pZD0xNjczNDM3MSZzaWc9MWFkNjRkMjE3YjEwMjI2MzY3MzViYTNkZGUyMzlkMWZjOTIzNjY5Yjpyb2xlPXB1Ymxpc2hlciZzZXNzaW9uX2lkPTJfTVg0eE5qY3pORE0zTVg1LU1qQXhNaTB3TnkweU1TQXhNVG8xTURveU1pNDJPVE13TURBck1EQTZNREItTUM0NU1EUXdPRFl4T0RrMU56Wi0mY3JlYXRlX3RpbWU9MTM0Mjg3MTQ3MSZub25jZT0wLjkzNDI2MzI3OTU4NTQyMzEmZXhwaXJlX3RpbWU9MTM0MzM2NTIwMA==';

		
		// Add to the page using the OpenTok server-side libraries.
/*

api Key=16734371
<% 
#secret = a69ccfc7bacbc4ad33d3501908870daa7437f491
%>
token = @opentok.generate_token :session_id => session_id, :expire_time=>1343365200

session_id(localhost)
1_MX4xNjczNDM3MX5-MjAxMi0wNy0yMSAxMTo0MjoxMi4wMzE3NjErMDA6MDB-MC4zMDk4NTA5NDg3MzF-

token = T1==cGFydG5lcl9pZD0xNjczNDM3MSZzaWc9MDZkMDEwZDkxNDlmN2Q0YWZiNGVhMWNmZmNjNmU2MjcwNDEyNTIyNjpyb2xlPXB1Ymxpc2hlciZzZXNzaW9uX2lkPTFfTVg0eE5qY3pORE0zTVg1LU1qQXhNaTB3TnkweU1TQXhNVG8wTWpveE1pNHdNekUzTmpFck1EQTZNREItTUM0ek1EazROVEE1TkRnM016Ri0mY3JlYXRlX3RpbWU9MTM0Mjg3MTM1MSZub25jZT0wLjY1OTY3NDg2NzYyOTI2MzEmZXhwaXJlX3RpbWU9MTM0MzM2NTIwMA==

session_id(nahrae.herokuapp.com)
2_MX4xNjczNDM3MX5-MjAxMi0wNy0yMSAxMTo1MDoyMi42OTMwMDArMDA6MDB-MC45MDQwODYxODk1NzZ-

token = T1==cGFydG5lcl9pZD0xNjczNDM3MSZzaWc9MWFkNjRkMjE3YjEwMjI2MzY3MzViYTNkZGUyMzlkMWZjOTIzNjY5Yjpyb2xlPXB1Ymxpc2hlciZzZXNzaW9uX2lkPTJfTVg0eE5qY3pORE0zTVg1LU1qQXhNaTB3TnkweU1TQXhNVG8xTURveU1pNDJPVE13TURBck1EQTZNREItTUM0NU1EUXdPRFl4T0RrMU56Wi0mY3JlYXRlX3RpbWU9MTM0Mjg3MTQ3MSZub25jZT0wLjkzNDI2MzI3OTU4NTQyMzEmZXhwaXJlX3RpbWU9MTM0MzM2NTIwMA==

*/
		var session;
		var publisher;
		var subscribers = {};

		$(document).ready(function(){
			// Un-comment either of the following to set automatic logging and exception handling.
			// See the exceptionHandler() method below.
			// TB.setLogLevel(TB.DEBUG);
			// TB.addEventListener("exception", exceptionHandler);

			if (TB.checkSystemRequirements() != TB.HAS_REQUIREMENTS) {
				alert("You don't have the minimum requirements to run this application."
					  + "Please upgrade to the latest version of Flash.");
			} else {
				session = TB.initSession(sessionId);	// Initialize session
				//var widget = _OT.widget;
				//widget.init(session, 'subscribers', { width: '500', height: '400', publisherSize: 'full', name: 'OpenTok User 123' });

				// Add event listeners to the session
				session.addEventListener('sessionConnected', sessionConnectedHandler);
				session.addEventListener('sessionDisconnected', sessionDisconnectedHandler);
				session.addEventListener('connectionCreated', connectionCreatedHandler);
				session.addEventListener('connectionDestroyed', connectionDestroyedHandler);
				session.addEventListener('streamCreated', streamCreatedHandler);
				session.addEventListener('streamDestroyed', streamDestroyedHandler);
			}
		});

		//--------------------------------------
		//  LINK CLICK HANDLERS
		//--------------------------------------

		/*
		If testing the app from the desktop, be sure to check the Flash Player Global Security setting
		to allow the page from communicating with SWF content loaded from the web. For more information,
		see http://www.tokbox.com/opentok/build/tutorials/helloworld.html#localTest
		*/
		function connect() {
			session.connect(apiKey, token);
			$('#connectLink').attr('disabled',true);
		}

		function disconnect() {
			session.disconnect();
			hide('disconnectLink');
			hide('publishLink');
			hide('unpublishLink');
			$('#connectLink').attr('disabled',false);
		}

		// Called when user wants to start publishing to the session
		function startPublishing() {
			if (!publisher) {
				var parentDiv = document.getElementById("myCamera");
				var publisherDiv = document.createElement('div'); // Create a div for the publisher to replace
				publisherDiv.setAttribute('id', 'opentok_publisher');
				parentDiv.appendChild(publisherDiv);
				publisher = TB.initPublisher(apiKey, publisherDiv.id, {width: 220, height: 145});  // Pass the replacement div id
				session.publish(publisher);
				show('unpublishLink');
				hide('publishLink');
			}
		}

		function stopPublishing() {
			if (publisher) {
				session.unpublish(publisher);
			}
			publisher = null;
			
			

			show('publishLink');
			hide('unpublishLink');
		}

		//--------------------------------------
		//  OPENTOK EVENT HANDLERS
		//--------------------------------------

		function sessionConnectedHandler(event) {
			// Subscribe to all streams currently in the Session
			for (var i = 0; i < event.streams.length; i++) {
				addStream(event.streams[i]);
			}
			startPublishing();
			show('disconnectLink');
			show('publishLink');
			hide('connectLink');
		}

		function streamCreatedHandler(event) {
			// Subscribe to the newly created streams
			for (var i = 0; i < event.streams.length; i++) {
				addStream(event.streams[i]);
			}
		}

		function streamDestroyedHandler(event) {
			// This signals that a stream was destroyed. Any Subscribers will automatically be removed.
			// This default behaviour can be prevented using event.preventDefault()
		}

		function sessionDisconnectedHandler(event) {
			// This signals that the user was disconnected from the Session. Any subscribers and publishers
			// will automatically be removed. This default behaviour can be prevented using event.preventDefault()
			publisher = null;

			show('connectLink');
			hide('disconnectLink');
			hide('publishLink');
			hide('unpublishLink');
		}

		function connectionDestroyedHandler(event) {
			// This signals that connections were destroyed
		}

		function connectionCreatedHandler(event) {
			// This signals new connections have been created.
		}

		/*
		If you un-comment the call to TB.addEventListener("exception", exceptionHandler) above, OpenTok calls the
		exceptionHandler() method when exception events occur. You can modify this method to further process exception events.
		If you un-comment the call to TB.setLogLevel(), above, OpenTok automatically displays exception event messages.
		*/
		function exceptionHandler(event) {
			alert("Exception: " + event.code + "::" + event.message);
		}

		//--------------------------------------
		//  HELPER METHODS
		//--------------------------------------

		function addStream(stream) {
			// Check if this is the stream that I am publishing, and if so do not publish.
			if (stream.connection.connectionId == session.connection.connectionId) {
				return;
			}
			$("#subscribers").append('<div id="'+stream.streamId+'"></div>');
			subscribers[stream.streamId] = session.subscribe(stream, stream.streamId, {width:640, height:480});
		}

		function show(id) {
			$('#' + id).show();
		}

		function hide(id) {
			$('#' + id).hide();
		}

	</script>


<div id="opentok_console"></div>
	<div id="links">
       	<input type="button" value="Start" class="btn btn-large btn-primary" id ="connectLink" onClick="javascript:connect()" />
       	<input type="button" value="Stop"  class="btn btn-large hide" id ="disconnectLink" onClick="javascript:disconnect()" />
       	<!--<input type="button" value="Start Publishing" id ="publishLink" onClick="javascript:startPublishing()" />
       	<input type="button" value="Stop Publishing" id ="unpublishLink" onClick="javascript:stopPublishing()" />-->
	</div>

	<div id="subscribers">
		<div id="myCamera" class="publisherContainer"></div>
	</div>

<script>
	show('connectLink');
</script>


<%
end
%>